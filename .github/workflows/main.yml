name: update-docs
on: 
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Also runs every day at 05:00
  schedule: 
    - cron: '0 5 * * *'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  extracted-tables-workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.5.3
      - name: Install python dependencies
        uses: py-actions/py-dependency-install@v4
        with:
          path: "requirements.txt"
      - name: Run extracted tables python script
        run: python python/extracted_table_docs.py
      - name: Run derived tables python script
        run: |
          cd python
          python data_pipeline.py
      - name: Check for modified files
        id: git-check
        run: |
          result=$(if [ -n "$(git status --porcelain)" ]; then echo "true"; else echo "false"; fi)
          echo "modified=$result" > "$GITHUB_OUTPUT"
      - name: Print result of modification check
        env:
          OUTPUT: ${{ steps.git-check.outputs.modified }}
        run: echo "Git Check Output - $OUTPUT"
      - name: Commit output if changed
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --global user.name 'Angela Zoss via GitHub Actions'
          git config --global user.email 'amzoss@users.noreply.github.com'
          git add -A
          git commit -m "[automated commit] update output from extracted_table_docs.py"
          git push
  # Build job
  build:
    runs-on: ubuntu-latest
    needs: extracted-tables-workflow
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.5.3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./docs
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
